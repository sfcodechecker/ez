//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class SimplifySubscriptionWrapper {

	public class LatestInvoice {
		public String id ; 
	}

	public class Plan{
		public String id;
		public Decimal amount;
		public String frequency;
	}
	
	public String id ; 
	public String status ; 
	public String name ; 
	public String frequency ; 
	public String amount ;
    public String email;
	public Plan plan;
	//public String currency_Z ; // in json: currency
	public LatestInvoice latestInvoice ; 
    public String customer;
	public SimplifyCustomerWrapper customerObj ; 
	public String frequencyPeriod ; 
	public String billingCycle ;
	public String dateCreated ; 
	public String currentPeriodStart;

	/*public SimplifySubscriptionWrapper(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'id') {
						id = parser.getText();
					} else if (text == 'currentPeriodStart') {
						currentPeriodStart = parser.getLongValue();
					} else if (text == 'currentPeriodEnd') {
						currentPeriodEnd = parser.getLongValue();
					} else if (text == 'start') {
						start = parser.getLongValue();
					} else if (text == 'status') {
						status = parser.getText();
					} else if (text == 'name') {
						name = parser.getText();
					} else if (text == 'frequency') {
						frequency = parser.getText();
					} else if (text == 'amount') {
						amount = parser.getIntegerValue();
					} else if (text == 'currency') {
						currency_Z = parser.getText();
					} else if (text == 'latestInvoice') {
						latestInvoice = new LatestInvoice(parser);
					} else if (text == 'custom') {
						custom = parser.getBooleanValue();
					} else if (text == 'customer') {
						customer = new Customer(parser);
					} else if (text == 'frequencyPeriod') {
						frequencyPeriod = parser.getIntegerValue();
					} else if (text == 'billingCycle') {
						billingCycle = parser.getText();
					} else if (text == 'dateCreated') {
						dateCreated = parser.getLongValue();
					} else if (text == 'pendingPayment') {
						pendingPayment = parser.getBooleanValue();
					} else {
						System.debug(LoggingLevel.WARN, 'SimplifySubscriptionWrapper consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}*/
	
	
	
	/*public static String createSubscriptionPayload(SimplifySubscriptionWrapper wrapper){
		Map<String,String> payloadMap=new Map<String,String>{'amount'=>wrapper.amount,'customer'=>wrapper.customer,'frequency'=>wrapper.frequency,'frequencyPeriod'=>wrapper.frequencyPeriod,'name'=>wrapper.name,'status'=>wrapper.status,'currentPeriodStart'=>wrapper.currentPeriodStart};
		String payload=JSON.serialize(payloadMap);
		return payload;
	}*/

	public static String createSubscriptionPayload(Map<String,String> subscriptionMap){
		return JSON.serialize(subscriptionMap);
	}

	/*public static SimplifySubscriptionWrapper parse(String response){
		return (SimplifySubscriptionWrapper)JSON.deserialize(response, SimplifySubscriptionWrapper.class);
	}*/

	
	
	/*public static SimplifySubscriptionWrapper parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new SimplifySubscriptionWrapper(parser);
	}*/
	
	
	







}