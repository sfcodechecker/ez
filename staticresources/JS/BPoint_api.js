(function(ms){ms.Version="3";ms.BaseUrl="https://www.bpoint.com.au/webapi";ms.ConvertAmounts=function(options){var defaults={AuthKey:null,Amount:null,AmountOriginal:null,AmountSurcharge:null,Currency:null,CallbackFunction:null};defaults=setOptions(true,defaults,options);var errors=validateConvertAmounts(defaults);if(errors.length){var resultObj=new resultObject(1,errors);defaults.CallbackFunction(resultObj);return}sendAjaxRequest({url:getPostUrl("TXN_CONVERT_AMOUNTS_END_POINT",
defaults.AuthKey),data:{Amount:defaults.Amount,AmountOriginal:defaults.AmountOriginal,AmountSurcharge:defaults.AmountSurcharge,Currency:defaults.Currency},callbackFunction:defaults.CallbackFunction})};ms.SetupPayment=function(options){var cssPath="CBA/api.css",cardNumber=new inputDisplayObject(true,"Card Number"),expiryDate=new inputDisplayObject(true,"Expiry Date"),cvc=new inputDisplayObject(true,"Cvn"),cardHolderName=new inputDisplayObject(true,
"Cardholder Name"),submitBtn=new inputDisplayObject(true,"Process Payment"),defaults={AppendToElementId:null,AuthKey:null,BillerCode:new inputDisplayObject(false,convertToDisplayLabel("BillerCode")),Crn1:new inputDisplayObject(false,convertToDisplayLabel("Crn1")),Crn2:new inputDisplayObject(false,convertToDisplayLabel("Crn2")),Crn3:new inputDisplayObject(false,convertToDisplayLabel("Crn3")),MerchantReference:new inputDisplayObject(false,convertToDisplayLabel("MerchantReference")),
EmailAddress:new inputDisplayObject(false,"Email"),Currency:new inputDisplayObject(false,"Currency"),Amount:new inputDisplayObject(false,"Amount"),StoreCard:new inputDisplayObject(false,"Store Card",false),DefaultErrorUrl:null,Type:statics.paymentCCOptionValue,TruncatedCardNumberValue:null,ExpiryDateValue:null};defaults=setOptions(true,defaults,options);var baseUrl=ms.BaseUrl.search(/\/$/)<0?ms.BaseUrl+="/":ms.BaseUrl;var appendToElement=getAppendToElement(defaults.AppendToElementId),payContainer=
document.createElement("div"),payForm=document.createElement("div"),payValidation=document.createElement("div"),elementsToAppend=new Array,authKeyObj=new inputDisplayObject(true,"",defaults.AuthKey),errorUrlObj=new inputDisplayObject(true,"",defaults.DefaultErrorUrl),paymentTypeObj=new inputDisplayObject(true,"",defaults.Type),cssUrl=baseUrl+cssPath+"?v="+ms.Version;insertApiCss(cssUrl);payContainer.id=getStaticLabel(statics.container);payForm.id=getStaticLabel(statics.form);payValidation.id=getStaticLabel(statics.validation);
payValidation.style.display="none";elementsToAppend.push(new formBuildingObject("hidden",statics.authKey,authKeyObj));elementsToAppend.push(new formBuildingObject("hidden",statics.defaultErrorUrl,errorUrlObj));elementsToAppend.push(new formBuildingObject("hidden",statics.paymentProcessingType,paymentTypeObj));elementsToAppend.push(new formBuildingObject("text",statics.billerCode,defaults.BillerCode,50));elementsToAppend.push(new formBuildingObject("text",statics.crn1,defaults.Crn1,50));
elementsToAppend.push(new formBuildingObject("text",statics.crn2,defaults.Crn2,50));elementsToAppend.push(new formBuildingObject("text",statics.crn3,defaults.Crn3,50));elementsToAppend.push(new formBuildingObject("text",statics.merchantReference,defaults.MerchantReference,50));elementsToAppend.push(new formBuildingObject("text",statics.email,defaults.EmailAddress,250));elementsToAppend.push(new formBuildingObject("text",statics.currency,defaults.Currency));elementsToAppend.push(new formBuildingObject("text",
statics.amount,defaults.Amount,20));if(defaults.Type==statics.paymentCCOptionValue)elementsToAppend.push(new formBuildingObject("text",statics.cardNumber,cardNumber,19));else if(defaults.Type==statics.paymentTOKENOptionValue){if(ms.IsNullOrEmptyString(defaults.TruncatedCardNumberValue)==false){var truncatedCardNumberObj=new inputDisplayObject(true,"Card Number",defaults.TruncatedCardNumberValue);elementsToAppend.push(new formBuildingObject("static-text",statics.truncatedCardNumber,truncatedCardNumberObj))}if(ms.IsNullOrEmptyString(defaults.ExpiryDateValue)==
false)expiryDate.Value=defaults.ExpiryDateValue}elementsToAppend.push(new formBuildingObject("expiry",statics.expiryDate,expiryDate,7));elementsToAppend.push(new formBuildingObject("cvc",statics.cvc,cvc,4));elementsToAppend.push(new formBuildingObject("text",statics.cardHolderName,cardHolderName,50));elementsToAppend.push(new formBuildingObject("checkbox",statics.storeCard,defaults.StoreCard));elementsToAppend.push(new formBuildingObject("button",statics.submitButton,submitBtn));buildForm(payForm,
elementsToAppend);payContainer.appendChild(payValidation);payContainer.appendChild(payForm);appendToElement.appendChild(payContainer);var btn=document.getElementById(getStaticLabel(statics.submitButton));btn.onclick=submitPaymentRequest};ms.ProcessPayment=function(options){var payEndPoint="txns/withauthkey";var defaults={AuthKey:null,Amount:null,AmountOriginal:null,AmountSurcharge:null,BillerCode:null,Crn1:null,Crn2:null,Crn3:null,MerchantReference:null,
EmailAddress:null,Currency:null,CardHolderName:null,CardNumber:null,ExpiryMonth:null,ExpiryYear:null,Cvn:null,StoreCard:false,CallbackFunction:null,Type:statics.paymentCCOptionValue};defaults=setOptions(defaults,options);var errors=validatePayment(defaults);var invokeCallbackFunction=function(ajaxResponseType,errors,apiResponseCode,payloadData){var resultObj=new resultObject(ajaxResponseType,errors,apiResponseCode);addResultKeyAndRedirectionUrl(resultObj,payloadData?payloadData.ResultKey:null,
payloadData?payloadData.RedirectionUrl:null);defaults.CallbackFunction(resultObj)};if(errors.length){invokeCallbackFunction(1,errors);return}var payUrl=getPostUrl(payEndPoint,defaults.AuthKey);var postData={"TxnReq":{"Amount":defaults.Amount,"AmountOriginal":defaults.AmountOriginal,"AmountSurcharge":defaults.AmountSurcharge,"BillerCode":defaults.BillerCode,"Crn1":defaults.Crn1,"Crn2":defaults.Crn2,"Crn3":defaults.Crn3,
"Currency":defaults.Currency,"MerchantReference":defaults.MerchantReference,"EmailAddress":defaults.EmailAddress,"StoreCard":defaults.StoreCard,"CardDetails":{"CardHolderName":defaults.CardHolderName,"CardNumber":defaults.CardNumber,"Cvn":defaults.Cvn,"ExpiryDateMonth":defaults.ExpiryMonth,"ExpiryDateYear":defaults.ExpiryYear}}};sendAjaxRequest({url:payUrl,data:postData,callbackFunction:function(response){invokeCallbackFunction(response.AjaxResponseType,
response.Errors,response.ApiResponseCode,response.PayloadData)}})};ms.SetupAddToken=function(options){setupTokenForm(options,"Add Token");var btn=document.getElementById(getStaticLabel(statics.submitButton));btn.onclick=submitAddTokenRequest};ms.ProcessAddToken=function(options){var addTokenEndPoint="dvtokens/withauthkey";var defaults={AuthKey:null,Crn1:null,Crn2:null,Crn3:null,EmailAddress:null,Type:statics.tokenCCOptionValue,CardHolderName:null,CardNumber:null,ExpiryMonth:null,
ExpiryYear:null,BSBNumber:null,BankAccountNumber:null,BankAccountName:null,AcceptBankAccountTerms:false,CallbackFunction:null};defaults=setOptions(defaults,options);var errors=validateAddToken(defaults);var invokeCallbackFunction=function(ajaxResponseType,errors,apiResponseCode,payloadData){var resultObj=new resultObject(ajaxResponseType,errors,apiResponseCode);addResultKeyAndRedirectionUrl(resultObj,payloadData?payloadData.ResultKey:null,payloadData?payloadData.RedirectionUrl:null);defaults.CallbackFunction(resultObj)};
if(errors.length){invokeCallbackFunction(1,errors);return}var addTokenUrl=getPostUrl(addTokenEndPoint,defaults.AuthKey);var postData=getTokenPostData(defaults);sendAjaxRequest({url:addTokenUrl,data:postData,callbackFunction:function(response){invokeCallbackFunction(response.AjaxResponseType,response.Errors,response.ApiResponseCode,response.PayloadData)}})};ms.SetupUpdateToken=function(options){setupTokenForm(options,"Update Token");var btn=document.getElementById(getStaticLabel(statics.submitButton));
btn.onclick=submitUpdateTokenRequest};ms.ProcessUpdateToken=function(options){var updateTokenEndPoint="dvtokens/withauthkey/update";var defaults={AuthKey:null,Crn1:null,Crn2:null,Crn3:null,EmailAddress:null,Type:statics.tokenCCOptionValue,CardHolderName:null,CardNumber:null,ExpiryMonth:null,ExpiryYear:null,BSBNumber:null,BankAccountNumber:null,BankAccountName:null,AcceptBankAccountTerms:false,CallbackFunction:null};defaults=setOptions(defaults,options);var errors=validateUpdateToken(defaults);
var invokeCallbackFunction=function(ajaxResponseType,errors,apiResponseCode,payloadData){var resultObj=new resultObject(ajaxResponseType,errors,apiResponseCode);addResultKeyAndRedirectionUrl(resultObj,payloadData?payloadData.ResultKey:null,payloadData?payloadData.RedirectionUrl:null);defaults.CallbackFunction(resultObj)};if(errors.length){invokeCallbackFunction(1,errors);return}var updateTokenUrl=getPostUrl(updateTokenEndPoint,defaults.AuthKey);var postData=getTokenPostData(defaults);sendAjaxRequest({url:updateTokenUrl,
data:postData,callbackFunction:function(response){invokeCallbackFunction(response.AjaxResponseType,response.Errors,response.ApiResponseCode,response.PayloadData)}})};ms.SetupSecureCallPayment=function(options){var errors=validateSetupSecureCall(options);if(errors.length>0){options.CallbackFunction(new resultObject(1,errors));return}var constants={fieldStatus:{capture_pending:"capture_pending",capturing:"capturing",success:"success",error:"error",none:"none"},fieldType:{card_number:"card_number",expiry_date:"expiry_date",
cvn:"cvn"},secureCallAction:{cancel:"cancel",capture_card:"capture_card",capture_expiry:"capture_expiry",capture_cvc:"capture_cvc",reset:"reset",disable_clamping:"disable_clamping",end_call:"end_call"},className:{button:{DEFAULT:getStaticLabel("button-default"),DANGER:getStaticLabel("button-danger"),VARIANT:getStaticLabel("button-variant")},text:{FOCUS:getStaticLabel("text-focus"),ERROR:getStaticLabel("text-error"),SUCCESS:getStaticLabel("text-success")},col:getStaticLabel("col"),node:getStaticLabel("node")},
label:{PROCESSING:"Processing...",WAITING:"Waiting...",INITIATING:"Initiating..."}};var helpers={date:{locale:{monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]},format:function(value){var date=new Date(Date.parse(value));var hours=date.getHours();var minutes=date.getMinutes();minutes=minutes<10?"0"+minutes:minutes;return date.getDate()+
" "+helpers.date.locale.monthNamesShort[date.getMonth()]+" "+date.getFullYear()+" "+hours+":"+minutes}}};var cssPath="CBA/api.css",startSecureModeBtn=new inputDisplayObject(true,"Initiate Secure Mode"),resetFormBtn=new inputDisplayObject(true,"Reset Form"),endSecureModeBtn=new inputDisplayObject(true,"Hang Up"),transferBtn=new inputDisplayObject(true,"Transfer"),resetCardNumberBtn=new inputDisplayObject(true,"Capture"),resetExpiryDateBtn=new inputDisplayObject(true,"Capture"),resetCVCBtn=
new inputDisplayObject(true,"Capture"),submitBtn=new inputDisplayObject(true,"Proceed"),initiateSecureCallDialogCancelBtn=new inputDisplayObject(true,"Cancel"),initiateSecureCallDialogContinueBtn=new inputDisplayObject(true,"Continue"),disableClampingDialogCancelBtn=new inputDisplayObject(true,"Back"),disableClampingDialogContinueBtn=new inputDisplayObject(true,"Confirm"),secureCallEndedDialogOkBtn=new inputDisplayObject(true,"OK"),secureCallConfirmDetailsDialogCancelBtn=new inputDisplayObject(true,
"Cancel"),secureCallConfirmDetailsDialogConfirmBtn=new inputDisplayObject(true,"Submit Payment"),secureCallReceiptDialogCloseBtn=new inputDisplayObject(true,"Close"),secureCallReceiptDialogUseSameCardBtn=new inputDisplayObject(true,"Use Same Card"),defaults={AppendToElementId:null,AuthKey:null,CallbackFunction:null,TestMode:new inputDisplayObject(false,"Test Mode",false),BillerCode:new inputDisplayObject(false,convertToDisplayLabel("BillerCode")),Crn1:new inputDisplayObject(true,
convertToDisplayLabel("Crn1")),Crn2:new inputDisplayObject(false,convertToDisplayLabel("Crn2")),Crn3:new inputDisplayObject(false,convertToDisplayLabel("Crn3")),MerchantReference:new inputDisplayObject(false,convertToDisplayLabel("MerchantReference")),EmailAddress:new inputDisplayObject(false,"Email"),Currency:new inputDisplayObject(false,"Currency"),Amount:new inputDisplayObject(true,"Amount"),AmountOriginal:new inputDisplayObject(false,
"Original Amount"),AmountSurcharge:new inputDisplayObject(false,"Surcharge Amount"),StoreCard:new inputDisplayObject(false,"Store Card",false),Action:new inputDisplayObject(false,"Action","payment"),Type:new inputDisplayObject(false,"Type","callcentre"),SubType:new inputDisplayObject(false,"Sub Type","single"),TokenisationMode:new inputDisplayObject(false,"Tokenisation Mode",0),MerchantNumber:new inputDisplayObject(false,convertToDisplayLabel("MerchantNumber")),
CardNumberLabelName:"Card Number",ExpiryDateLabelName:"Expiry Date",CvnLabelName:"Cvn"};defaults=setOptions(true,defaults,options);defaults.CardNumber=new inputDisplayObject(true,defaults.CardNumberLabelName,null,true);delete defaults.CardNumberLabelName;defaults.ExpiryDate=new inputDisplayObject(true,defaults.ExpiryDateLabelName,null,true);delete defaults.ExpiryDateLabelName;defaults.Cvn=new inputDisplayObject(true,defaults.CvnLabelName,null,true);delete defaults.CvnLabelName;
var baseUrl=ms.BaseUrl.search(/\/$/)<0?ms.BaseUrl+="/":ms.BaseUrl;var appendToElement=getAppendToElement(defaults.AppendToElementId),container=document.createElement("div"),form=document.createElement("div"),secureCallForm=document.createElement("div"),formValidation=document.createElement("div"),authKeyObj=new inputDisplayObject(true,"",defaults.AuthKey),cssUrl=baseUrl+cssPath+"?v="+ms.Version;insertApiCss(cssUrl);container.id=getStaticLabel(statics.container);container.classList.add("setup-secure-call-payment");
form.id=getStaticLabel(statics.form);secureCallForm.id=getStaticLabel(statics.secureCallForm);secureCallForm.style.display="none";formValidation.id=getStaticLabel(statics.validation);formValidation.style.display="none";var formElements=new Array;formElements.push(new formBuildingObject("hidden",statics.authKey,authKeyObj));formElements.push(new formBuildingObject("checkbox",statics.testMode,defaults.TestMode));formElements.push(new formBuildingObject("text",statics.merchantNumber,defaults.MerchantNumber,
20));formElements.push(new formBuildingObject("text",statics.txnAction,defaults.Action,20));formElements.push(new formBuildingObject("text",statics.billerCode,defaults.BillerCode,50));formElements.push(new formBuildingObject("text",statics.crn1,defaults.Crn1,50,{required:true}));formElements.push(new formBuildingObject("text",statics.crn2,defaults.Crn2,50));formElements.push(new formBuildingObject("text",statics.crn3,defaults.Crn3,50));formElements.push(new formBuildingObject("text",
statics.merchantReference,defaults.MerchantReference,50));formElements.push(new formBuildingObject("text",statics.email,defaults.EmailAddress,250));formElements.push(new formBuildingObject("text",statics.currency,defaults.Currency));formElements.push(new formBuildingObject("text",statics.amount,defaults.Amount,20,{required:true}));formElements.push(new formBuildingObject("text",statics.amountOriginal,defaults.AmountOriginal,20));formElements.push(new formBuildingObject("text",
statics.amountSurcharge,defaults.AmountSurcharge,20));formElements.push(new formBuildingObject("checkbox",statics.storeCard,defaults.StoreCard,20));formElements.push(new formBuildingObject("text",statics.txnType,defaults.Type,20));formElements.push(new formBuildingObject("text",statics.txnSubType,defaults.SubType,20));formElements.push(new formBuildingObject("text",statics.tokenisationMode,defaults.TokenisationMode,20));buildForm(form,formElements);container.appendChild(formValidation);
container.appendChild(form);var secureCallFormElements=[];secureCallFormElements.push(new formBuildingObject("text",statics.truncatedCardNumber,defaults.CardNumber,20,{required:true}));secureCallFormElements.push(new formBuildingObject("button",statics.resetCardNumberButton,resetCardNumberBtn));secureCallFormElements.push(new formBuildingObject("text",statics.expiryDate,defaults.ExpiryDate,4,{required:true}));secureCallFormElements.push(new formBuildingObject("button",statics.resetExpiryDateButton,
resetExpiryDateBtn));secureCallFormElements.push(new formBuildingObject("text",statics.cvc,defaults.Cvn,3,{required:true}));secureCallFormElements.push(new formBuildingObject("button",statics.resetCVCButton,resetCVCBtn));buildForm(secureCallForm,secureCallFormElements);form.appendChild(secureCallForm);var secureCallFormOverlay=createElement("div",null,"overlay");secureCallFormOverlay.appendChild(createElement("div",null,"background"));secureCallFormOverlay.appendChild(createElement("span","Initiating Secure Mode"));
secureCallForm.appendChild(secureCallFormOverlay);var buttonRowFormElements=[];buttonRowFormElements.push(new formBuildingObject("button",statics.startSecureModeButton,startSecureModeBtn,null,{columnSm:"6",columnMd:"3"}));buttonRowFormElements.push(new formBuildingObject("button",statics.submitButton,submitBtn,null,{appendToPreviousRow:true,columnSm:"4",columnMd:"3"}));buttonRowFormElements.push(new formBuildingObject("button",statics.resetFormButton,resetFormBtn,null,{appendToPreviousRow:true,columnSm:"4",
columnMd:"3"}));buttonRowFormElements.push(new formBuildingObject("button",statics.transferButton,transferBtn,null,{appendToPreviousRow:true,columnSm:"4",columnMd:"3"}));buttonRowFormElements.push(new formBuildingObject("button",statics.endSecureModeButton,endSecureModeBtn,null,{appendToPreviousRow:true,columnSm:"4",columnMd:"3"}));buildForm(form,buttonRowFormElements);appendToElement.appendChild(container);var initiateSecureCallDialog={id:getStaticLabel(statics.initiateSecureCallDialog),title:"Initiate Secure Mode",
body:createElement("span",""),footer:buildForm(document.createElement("div"),[new formBuildingObject("button",statics.initiateSecureCallDialogCancelButton,initiateSecureCallDialogCancelBtn),new formBuildingObject("button",statics.initiateSecureCallDialogContinueButton,initiateSecureCallDialogContinueBtn,null,{appendToPreviousRow:true})])};initiateSecureCallDialog.modal=buildModalDialog(initiateSecureCallDialog);form.appendChild(initiateSecureCallDialog.modal.element);var disableClampingDialog={id:getStaticLabel(statics.disableClampingDialog),
title:createElement("span",""),body:createElement("span",""),footer:buildForm(document.createElement("div"),[new formBuildingObject("button",statics.disableClampingDialogCancelButton,disableClampingDialogCancelBtn),new formBuildingObject("button",statics.disableClampingDialogContinueButton,disableClampingDialogContinueBtn,null,{appendToPreviousRow:true})])};disableClampingDialog.modal=buildModalDialog(disableClampingDialog);form.appendChild(disableClampingDialog.modal.element);var secureCallEndedDialog=
{id:getStaticLabel(statics.secureCallEndedDialog),title:"Secure Call Ended",body:"The secure call has ended",footer:buildForm(document.createElement("div"),[new formBuildingObject("button",statics.secureCallEndedDialogOkButton,secureCallEndedDialogOkBtn)])};secureCallEndedDialog.modal=buildModalDialog(secureCallEndedDialog);form.appendChild(secureCallEndedDialog.modal.element);var secureCallConfirmDetailsDialog={id:getStaticLabel(statics.secureCallConfirmDetailsDialog),title:"Confirm Details",body:document.createElement("div"),
footer:buildForm(document.createElement("div"),[new formBuildingObject("button",statics.secureCallConfirmDetailsDialogCancelButton,secureCallConfirmDetailsDialogCancelBtn),new formBuildingObject("button",statics.secureCallConfirmDetailsDialogConfirmButton,secureCallConfirmDetailsDialogConfirmBtn,null,{appendToPreviousRow:true})])};secureCallConfirmDetailsDialog.modal=buildModalDialog(secureCallConfirmDetailsDialog);form.appendChild(secureCallConfirmDetailsDialog.modal.element);var secureCallReceiptDialog=
{id:getStaticLabel(statics.secureCallReceiptDialog),title:createElement("span","Payment Successful"),body:document.createElement("div"),footer:buildForm(document.createElement("div"),[new formBuildingObject("button",statics.secureCallReceiptDialogCloseButton,secureCallReceiptDialogCloseBtn),new formBuildingObject("button",statics.secureCallReceiptDialogUseSameCardButton,secureCallReceiptDialogUseSameCardBtn,null,{appendToPreviousRow:true})])};secureCallReceiptDialog.modal=buildModalDialog(secureCallReceiptDialog);
form.appendChild(secureCallReceiptDialog.modal.element);var getProcessSecureCallTxnOptions=function(){var storeCard=getElementValue(statics.storeCard);storeCard=typeof storeCard==="boolean"?storeCard:false;return{AuthKey:getElementValue(statics.authKey),TestMode:getElementValue(statics.testMode),Action:getElementValue(statics.txnAction),Type:getElementValue(statics.txnType),SubType:getElementValue(statics.txnSubType),BillerCode:getElementValue(statics.billerCode),
EmailAddress:getElementValue(statics.email),MerchantReference:getElementValue(statics.merchantReference),Crn1:getElementValue(statics.crn1),Crn2:getElementValue(statics.crn2),Crn3:getElementValue(statics.crn3),Currency:getElementValue(statics.currency),Amount:getElementValue(statics.amount),AmountOriginal:getElementValue(statics.amountOriginal),AmountSurcharge:getElementValue(statics.amountSurcharge),TokenisationMode:getElementValue(statics.tokenisationMode),
StoreCard:storeCard,MerchantNumber:getElementValue(statics.merchantNumber)}};var startSecureModeButton=document.getElementById(getStaticLabel(statics.startSecureModeButton));var resetFormButton=document.getElementById(getStaticLabel(statics.resetFormButton));resetFormButton.classList.add(constants.className.button.DEFAULT);var transferButton=document.getElementById(getStaticLabel(statics.transferButton));transferButton.classList.add(constants.className.button.DANGER);findParentByClass(transferButton,
constants.className.col).style.display="none";var endSecureModeButton=document.getElementById(getStaticLabel(statics.endSecureModeButton));endSecureModeButton.classList.add(constants.className.button.DANGER);findParentByClass(endSecureModeButton,constants.className.col).style.display="none";var resetCardNumberButton=document.getElementById(getStaticLabel(statics.resetCardNumberButton));resetCardNumberButton.classList.add(constants.className.button.DEFAULT);var resetExpiryDateButton=document.getElementById(getStaticLabel(statics.resetExpiryDateButton));
resetExpiryDateButton.classList.add(constants.className.button.DEFAULT);var resetCVCButton=document.getElementById(getStaticLabel(statics.resetCVCButton));resetCVCButton.classList.add(constants.className.button.DEFAULT);var submitButton=document.getElementById(getStaticLabel(statics.submitButton));findParentByClass(submitButton,constants.className.col).style.display="none";var truncatedCardNumberInput=document.getElementById(getStaticLabel(statics.truncatedCardNumber));var expiryDateInput=document.getElementById(getStaticLabel(statics.expiryDate));
var cvcInput=document.getElementById(getStaticLabel(statics.cvc));var initiateSecureCallDialogCancelButton=document.getElementById(getStaticLabel(statics.initiateSecureCallDialogCancelButton));initiateSecureCallDialogCancelButton.classList.add(constants.className.button.DEFAULT);var initiateSecureCallDialogContinueButton=document.getElementById(getStaticLabel(statics.initiateSecureCallDialogContinueButton));var disableClampingDialogCancelButton=document.getElementById(getStaticLabel(statics.disableClampingDialogCancelButton));
disableClampingDialogCancelButton.classList.add(constants.className.button.DEFAULT);var disableClampingDialogContinueButton=document.getElementById(getStaticLabel(statics.disableClampingDialogContinueButton));var secureCallEndedDialogOkButton=document.getElementById(getStaticLabel(statics.secureCallEndedDialogOkButton));secureCallEndedDialogOkButton.classList.add(constants.className.button.DEFAULT);var secureCallConfirmDetailsDialogCancelButton=document.getElementById(getStaticLabel(statics.secureCallConfirmDetailsDialogCancelButton));
secureCallConfirmDetailsDialogCancelButton.classList.add(constants.className.button.DEFAULT);var secureCallConfirmDetailsDialogConfirmButton=document.getElementById(getStaticLabel(statics.secureCallConfirmDetailsDialogConfirmButton));var secureCallReceiptDialogCloseButton=document.getElementById(getStaticLabel(statics.secureCallReceiptDialogCloseButton));secureCallReceiptDialogCloseButton.classList.add(constants.className.button.DEFAULT);var secureCallReceiptDialogUseSameCardButton=document.getElementById(getStaticLabel(statics.secureCallReceiptDialogUseSameCardButton));
secureCallReceiptDialogUseSameCardButton.classList.add(constants.className.button.VARIANT);var resetValidation=function(){resetInputErrors(statics.form);var validationSection=document.getElementById(getStaticLabel(statics.validation));removeChildElements(statics.validation);validationSection.style.display="none";return validationSection};var showSecureCallErrors=function(errors){var validationSection=resetValidation();var hasErrors=errors&&errors.length>0;if(hasErrors){errorList=getDisplayErrorList(errors,
true);validationSection.appendChild(errorList);validationSection.style.display="block"}return hasErrors};var showIvrErrorMessage=function(tb,message){var apiNode=findParentByClass(tb,constants.className.node);var p=apiNode.getElementsByClassName("ivr-error")[0];if(message){if(!p){p=document.createElement("p");p.classList.add("ivr-error");apiNode.appendChild(p)}var innerHtml="<b>ERROR - </b>"+message;if(p.innerHTML!==innerHtml)p.innerHTML=innerHtml}else if(p)removeElement(p)};var hideSecureCallForm=
function(){setValue(startSecureModeButton,startSecureModeBtn.LabelName);setDisabled(startSecureModeButton,false);findParentByClass(startSecureModeButton,constants.className.col).style.display="";findParentByClass(submitButton,constants.className.col).style.display="none";findParentByClass(transferButton,constants.className.col).style.display="none";findParentByClass(endSecureModeButton,constants.className.col).style.display="none";secureCallForm.style.display="none";secureCallFormOverlay.style.display=
""};var fieldTypeWaitingForResponse;var initiateSecureCallCompleted=function(){var restoreValue=setValue(startSecureModeButton,constants.label.INITIATING);var restoreDisabled=setDisabled(startSecureModeButton,true);secureCallForm.style.display="";truncatedCardNumberInput.value="";expiryDateInput.value="";cvcInput.value="";var updateInputByDataField=function(tb,dataField){switch(dataField.FieldStatus){case constants.fieldStatus.capture_pending:case constants.fieldStatus.capturing:if(tb.classList.contains(constants.className.text.FOCUS)===
false){tb.classList.add(constants.className.text.FOCUS);tb.classList.remove(constants.className.text.ERROR);tb.classList.remove(constants.className.text.SUCCESS)}break;case constants.fieldStatus.success:if(tb.classList.contains(constants.className.text.SUCCESS)===false){tb.classList.remove(constants.className.text.FOCUS);tb.classList.remove(constants.className.text.ERROR);tb.classList.add(constants.className.text.SUCCESS)}break;case constants.fieldStatus.error:if(tb.classList.contains(constants.className.text.ERROR)===
false){tb.classList.remove(constants.className.text.FOCUS);tb.classList.add(constants.className.text.ERROR);tb.classList.remove(constants.className.text.SUCCESS)}break;case constants.fieldStatus.none:tb.classList.remove(constants.className.text.FOCUS);tb.classList.remove(constants.className.text.ERROR);tb.classList.remove(constants.className.text.SUCCESS);break}showIvrErrorMessage(tb,dataField.Message);if(tb.value!==dataField.DisplayValue)tb.value=dataField.DisplayValue};var updateButtonByDataField=
function(btn,fieldStatus,inputDisplayObject){switch(fieldStatus){case constants.fieldStatus.capturing:setValue(btn,"Capturing...");btn.classList.remove(constants.className.button.DEFAULT);btn.classList.remove(constants.className.button.VARIANT);break;case constants.fieldStatus.capture_pending:setValue(btn,"Pending...");btn.classList.remove(constants.className.button.DEFAULT);btn.classList.add(constants.className.button.VARIANT);break;default:setValue(btn,inputDisplayObject.LabelName);btn.classList.add(constants.className.button.DEFAULT);
btn.classList.remove(constants.className.button.VARIANT);break}};var cardDataCaptureCallbackFunction=function(response){if(response.Status===0){if(response.PayloadData)response.PayloadData.forEach(function(dataField){if(fieldTypeWaitingForResponse===dataField.FieldType)return;switch(dataField.FieldType){case constants.fieldType.card_number:updateInputByDataField(truncatedCardNumberInput,dataField);updateButtonByDataField(resetCardNumberButton,dataField.FieldStatus,resetCardNumberBtn);setDisabled(resetExpiryDateButton,
dataField.FieldStatus!==constants.fieldStatus.success);break;case constants.fieldType.expiry_date:updateInputByDataField(expiryDateInput,dataField);updateButtonByDataField(resetExpiryDateButton,dataField.FieldStatus,resetExpiryDateBtn);setDisabled(resetCVCButton,dataField.FieldStatus!==constants.fieldStatus.success);break;case constants.fieldType.cvn:updateInputByDataField(cvcInput,dataField);updateButtonByDataField(resetCVCButton,dataField.FieldStatus,resetCVCBtn);break}})}else showSecureCallErrors(response.Errors)};
ms.SCISetup({AuthKey:defaults.AuthKey,CallConnectedCallbackFunction:function(response){restoreDisabled();restoreValue();if(response.Status===0){findParentByClass(startSecureModeButton,constants.className.col).style.display="none";findParentByClass(submitButton,constants.className.col).style.display="";findParentByClass(transferButton,constants.className.col).style.display="";findParentByClass(endSecureModeButton,constants.className.col).style.display="";secureCallFormOverlay.style.display="none";
cardDataCaptureCallbackFunction(response)}else{hideSecureCallForm();showSecureCallErrors(response.Errors)}},CardDataCaptureCallbackFunction:cardDataCaptureCallbackFunction,CallTerminatedCallbackFunction:function(response){showSecureCallErrors(response.Errors);if(response.Status===0){secureCallEndedDialog.modal.visible=true;hideSecureCallForm()}},OnErrorCallbackFunction:function(response){showSecureCallErrors(response.Errors)}})};var removeChildren=function(node){while(node.hasChildNodes())node.removeChild(node.lastChild)};
var buildModalFormElements=function(formFields,dialogId,dataMemberNames){var elements=[];dataMemberNames.forEach(function(dataMemberName){var formField=formFields.filter(function(x){return x.dataMemberName===dataMemberName})[0];if(formField)elements.push(new formBuildingObject("static-text",dialogId+"-"+formField.id,new inputDisplayObject(true,formField.labelName,formField.value,true)))});return elements};var resetFormElements=function(){formElements.forEach(function(formElement){if(formElement.displayObject&&
formElement.displayObject.Visible&&formElement.type!=="button"&&formElement.type!=="hidden"){var inputElement=document.getElementById(getStaticLabel(formElement.id));inputElement.value=formElement.displayObject.Value}})};var validateRequiredElements=function(formBuildingObjects,errors){formBuildingObjects.forEach(function(formElement){if(formElement.displayObject&&formElement.displayObject.Visible&&formElement.type!=="button"&&formElement.type!=="hidden"&&formElement.required){var inputElement=document.getElementById(getStaticLabel(formElement.id));
if(ms.IsNullOrEmptyString(inputElement.value))errors.push(new errorObject(formElement.displayObject.LabelName+" is required",formElement.displayObject.LabelName))}})};var validateSecureCallProcessTransaction=function(defaults,options){var errors=new Array;validateRequiredElements(formElements,errors);var crnFields=["Crn1","Crn2","Crn3"];crnFields.forEach(function(labelName){if(defaults[labelName].Visible&&!ms.IsNullOrEmptyString(options[labelName])&&options[labelName].match(/(&|\?|,)/))errors.push(new errorObject("Invalid "+
labelName+". Characters & ? , are not allowed",labelName))});var amountFields=["Amount","AmountOriginal","AmountSurcharge"];amountFields.forEach(function(labelName){if(defaults[labelName].Visible&&!ms.IsNullOrEmptyString(options[labelName]))if(isNaN(options[labelName])||options[labelName].match(/(-)/))errors.push(new errorObject("Invalid "+labelName+" (E.g. 100.00)",labelName))});return errors};startSecureModeButton.onclick=function(){var options=getProcessSecureCallTxnOptions();
var errors=validateSecureCallProcessTransaction(defaults,options);showSecureCallErrors(errors);if(errors.length>0)return;var restoreValue=setValue(startSecureModeButton,constants.label.PROCESSING);var restoreDisabled=setDisabled(startSecureModeButton,true);ms.InitiateSecureCall({AuthKey:defaults.AuthKey,CallbackFunction:function(response){restoreValue();restoreDisabled();showSecureCallErrors(response.Errors);if(response.Status===0){var secureCallConfiguration=response.PayloadData;if(secureCallConfiguration.HideAccessCodePopup===
false&&secureCallConfiguration.AccessCodePopupMessage){initiateSecureCallDialog.body.innerHTML=secureCallConfiguration.AccessCodePopupMessage;initiateSecureCallDialog.modal.visible=true}setVisible(endSecureModeButton,!secureCallConfiguration.HideHangupButton);if(secureCallConfiguration.HangupButtonLabel)setValue(endSecureModeButton,secureCallConfiguration.HangupButtonLabel);setVisible(transferButton,!secureCallConfiguration.HideDisableClampingButton);disableClampingDialog.title.innerHTML=secureCallConfiguration.DisableClampingButtonLabel;
disableClampingDialog.body.innerHTML=secureCallConfiguration.DisableClampingPopupMessage;if(!initiateSecureCallDialog.modal.visible)initiateSecureCallCompleted()}}})};resetFormButton.onclick=function(){resetFormElements()};transferButton.onclick=function(){disableClampingDialog.modal.visible=true};endSecureModeButton.onclick=function(){var restoreValue=setValue(endSecureModeButton,constants.label.PROCESSING);var restoreDisabled=setDisabled(endSecureModeButton,true);ms.InitiateSecureCallAction({AuthKey:defaults.AuthKey,
Action:constants.secureCallAction.end_call,CallbackFunction:function(response){if(showSecureCallErrors(response.Errors)){restoreDisabled();restoreValue()}else setValue(endSecureModeButton,constants.label.WAITING)}})};resetCardNumberButton.onclick=function(){var restoreValue=setValue(resetCardNumberButton,constants.label.PROCESSING);var restoreDisabled=setDisabled(resetCardNumberButton,true);fieldTypeWaitingForResponse=constants.fieldType.card_number;ms.InitiateSecureCallAction({AuthKey:defaults.AuthKey,
Action:constants.secureCallAction.capture_card,CallbackFunction:function(response){restoreDisabled();if(showSecureCallErrors(response.Errors))restoreValue();fieldTypeWaitingForResponse=null}})};resetExpiryDateButton.onclick=function(){var restoreValue=setValue(resetExpiryDateButton,constants.label.PROCESSING);var restoreDisabled=setDisabled(resetExpiryDateButton,true);fieldTypeWaitingForResponse=constants.fieldType.expiry_date;ms.InitiateSecureCallAction({AuthKey:defaults.AuthKey,Action:constants.secureCallAction.capture_expiry,
CallbackFunction:function(response){restoreDisabled();if(showSecureCallErrors(response.Errors))restoreValue();fieldTypeWaitingForResponse=null}})};resetCVCButton.onclick=function(){var restoreValue=setValue(resetCVCButton,constants.label.PROCESSING);var restoreDisabled=setDisabled(resetCVCButton,true);fieldTypeWaitingForResponse=constants.fieldType.cvn;ms.InitiateSecureCallAction({AuthKey:defaults.AuthKey,Action:constants.secureCallAction.capture_cvc,CallbackFunction:function(response){restoreDisabled();
if(showSecureCallErrors(response.Errors))restoreValue();fieldTypeWaitingForResponse=null}})};submitButton.onclick=function(){var processSecureCallTxnOptions=getProcessSecureCallTxnOptions();var errors=validateSecureCallProcessTransaction(defaults,processSecureCallTxnOptions);if(!truncatedCardNumberInput.value||truncatedCardNumberInput.classList.contains(constants.className.text.SUCCESS)===false)errors.push(new errorObject("Invalid "+defaults.CardNumber.LabelName,defaults.CardNumber.LabelName));else if(expiryDateInput.classList.contains(constants.className.text.SUCCESS)===
false)errors.push(new errorObject("Invalid "+defaults.ExpiryDate.LabelName,defaults.ExpiryDate.LabelName));else if(cvcInput.classList.contains(constants.className.text.SUCCESS)===false)errors.push(new errorObject("Invalid "+defaults.Cvn.LabelName,defaults.Cvn.LabelName));if(showSecureCallErrors(errors))return;ms.ConvertAmounts({AuthKey:defaults.AuthKey,Amount:processSecureCallTxnOptions["Amount"],AmountOriginal:processSecureCallTxnOptions["AmountOriginal"],AmountSurcharge:processSecureCallTxnOptions["AmountSurcharge"],
Currency:processSecureCallTxnOptions["Currency"],CallbackFunction:function(convertAmountsResponse){if(showSecureCallErrors(convertAmountsResponse.Errors))return;var labelNameToDataMemberNameMapping={};for(var property in defaults)if(defaults.hasOwnProperty(property)&&defaults[property]&&defaults[property].LabelName)labelNameToDataMemberNameMapping[defaults[property].LabelName]=property;var formFields=[];formElements.forEach(function(formElement){if(formElement.displayObject&&formElement.displayObject.Visible&&
formElement.displayObject.LabelName){var dataMemberName=labelNameToDataMemberNameMapping[formElement.displayObject.LabelName];var value=convertAmountsResponse.PayloadData["Display"+dataMemberName]||processSecureCallTxnOptions[dataMemberName];if(value!==undefined)formFields.push({id:getStaticLabel(formElement.id),labelName:formElement.displayObject.LabelName,dataMemberName:dataMemberName,value:value})}});formFields.push({id:getStaticLabel(statics.truncatedCardNumber),labelName:defaults.CardNumber.LabelName,
dataMemberName:defaults.CardNumber.LabelName,value:getElementValue(statics.truncatedCardNumber)});formFields.push({id:getStaticLabel(statics.expiryDate),labelName:defaults.ExpiryDate.LabelName,dataMemberName:defaults.ExpiryDate.LabelName,value:getElementValue(statics.expiryDate)});removeChildren(secureCallConfirmDetailsDialog.body);var customerDetailsFields=["BillerCode","EmailAddress","MerchantReference","Crn1","Crn2","Crn3"];secureCallConfirmDetailsDialog.body.appendChild(createElement("h4",
"Customer Details"));var modalFormElements=buildModalFormElements(formFields,secureCallConfirmDetailsDialog.id,customerDetailsFields);buildForm(secureCallConfirmDetailsDialog.body,modalFormElements);var paymentDetailsFields=["Currency","Amount","AmountOriginal","AmountSurcharge","TestMode","Action","Type","SubType","TokenisationMode","StoreCard"];secureCallConfirmDetailsDialog.body.appendChild(createElement("h4","Payment Details"));
modalFormElements=buildModalFormElements(formFields,secureCallConfirmDetailsDialog.id,paymentDetailsFields);buildForm(secureCallConfirmDetailsDialog.body,modalFormElements);var accountDetailsFields=[defaults.CardNumber.LabelName,defaults.ExpiryDate.LabelName];secureCallConfirmDetailsDialog.body.appendChild(createElement("h4","Account Details"));modalFormElements=buildModalFormElements(formFields,secureCallConfirmDetailsDialog.id,accountDetailsFields);buildForm(secureCallConfirmDetailsDialog.body,
modalFormElements);secureCallConfirmDetailsDialog.modal.visible=true;secureCallConfirmDetailsDialogConfirmButton.onclick=function(){var restoreValue=setValue(secureCallConfirmDetailsDialogConfirmButton,constants.label.PROCESSING);var restoreDisabled=setDisabled(secureCallConfirmDetailsDialogConfirmButton,true);resetValidation();processSecureCallTxnOptions["Amount"]=convertAmountsResponse.PayloadData["Amount"];processSecureCallTxnOptions["AmountOriginal"]=convertAmountsResponse.PayloadData["AmountOriginal"];
processSecureCallTxnOptions["AmountSurcharge"]=convertAmountsResponse.PayloadData["AmountSurcharge"];processSecureCallTxnOptions.CallbackFunction=function(response){restoreDisabled();restoreValue();secureCallConfirmDetailsDialog.modal.visible=false;showSecureCallErrors(response.Errors);if(response.Status===0){defaults.CallbackFunction.apply(this,arguments);removeChildren(secureCallReceiptDialog.body);var isSuccess=response.PayloadData.ResponseCode==="0";secureCallReceiptDialog.title.innerHTML=
isSuccess?"Payment Successful":"Payment Failed";var receiptMessageElement=createElement("div","The payment "+(isSuccess?"was successful":"failed"),null,{id:secureCallReceiptDialog.id+"-"+getStaticLabel("receipt-message")});if(isSuccess===false)receiptMessageElement.classList.add("ivr-error");secureCallReceiptDialog.body.appendChild(receiptMessageElement);secureCallReceiptDialog.body.appendChild(createElement("h4","Receipt Details"));modalFormElements=[];var receiptNumber=response.PayloadData.ReceiptNumber;
if(receiptNumber)modalFormElements.push(new formBuildingObject("static-text",secureCallReceiptDialog.id+"-"+getStaticLabel("receiptnumber"),new inputDisplayObject(true,"Receipt Number",receiptNumber,true)));var paymentTime=helpers.date.format(response.PayloadData.ProcessedDateTime);modalFormElements.push(new formBuildingObject("static-text",secureCallReceiptDialog.id+"-"+getStaticLabel("paymenttime"),new inputDisplayObject(true,"Payment Time",paymentTime,true)));formFields.forEach(function(formField){modalFormElements.push(new formBuildingObject("static-text",
secureCallReceiptDialog.id+"-"+formField.id,new inputDisplayObject(true,formField.labelName,formField.value,true)))});buildForm(secureCallReceiptDialog.body,modalFormElements);secureCallReceiptDialog.modal.visible=true}};ms.ProcessSecureCallTxn(processSecureCallTxnOptions)}}})};initiateSecureCallDialogCancelButton.onclick=function(){var restoreValue=setValue(initiateSecureCallDialogCancelButton,constants.label.PROCESSING);var restoreDisabled=setDisabled(initiateSecureCallDialogCancelButton,true);
ms.InitiateSecureCallAction({AuthKey:defaults.AuthKey,Action:constants.secureCallAction.cancel,CallbackFunction:function(response){restoreDisabled();restoreValue();if(!showSecureCallErrors(response.Errors))initiateSecureCallDialog.modal.visible=false}})};initiateSecureCallDialogContinueButton.onclick=function(){initiateSecureCallDialog.modal.visible=false;initiateSecureCallCompleted()};disableClampingDialogCancelButton.onclick=function(){disableClampingDialog.modal.visible=false};disableClampingDialogContinueButton.onclick=
function(){var restoreValue=setValue(disableClampingDialogContinueButton,constants.label.PROCESSING);var restoreDisabled=setDisabled(disableClampingDialogContinueButton,true);ms.InitiateSecureCallAction({AuthKey:defaults.AuthKey,Action:constants.secureCallAction.disable_clamping,CallbackFunction:function(response){restoreDisabled();restoreValue();if(!showSecureCallErrors(response.Errors))removeElement(container)}})};secureCallEndedDialogOkButton.onclick=function(){removeElement(container)};secureCallConfirmDetailsDialogCancelButton.onclick=
function(){secureCallConfirmDetailsDialog.modal.visible=false};secureCallReceiptDialogCloseButton.onclick=function(){secureCallReceiptDialog.modal.visible=false;resetFormElements();ms.InitiateSecureCallAction({AuthKey:defaults.AuthKey,Action:constants.secureCallAction.reset,CallbackFunction:function(response){showSecureCallErrors(response.Errors)}})};secureCallReceiptDialogUseSameCardButton.onclick=function(){secureCallReceiptDialog.modal.visible=false;resetFormElements()}};ms.ValidateCardNumber=
function(num){num=(num+"").replace(/\s+|-/g,"");return num.length>=10&&num.length<=16&&luhnCheck(num)};ms.ValidateCVC=function(num){num=trimString(num);return/^\d+$/.test(num)&&num.length>=3&&num.length<=4};ms.ValidateExpiry=function(month,year){var currentTime,expiry;month=trimString(month);year=trimString(year);if(/^\d+$/.test(month)==false)return false;if(/^\d+$/.test(year)==false)return false;if(month.length!==2)return false;if(month==="99"&&year.length===2)return true;if(parseInt(month,10)<=
12==false)return false;if(year.length==2)year="20"+year;expiry=new Date(year,month);currentTime=new Date;expiry.setMonth(expiry.getMonth()-1);expiry.setMonth(expiry.getMonth()+1,1);return expiry>currentTime};ms.ValidateBSB=function(num){num=trimString(num);return/^\d+$/.test(num)&&num.length==6};ms.ValidateAccountNumber=function(num){num=trimString(num);return/^\d+$/.test(num)&&num.length>=3&&num.length<=9};ms.IsNullOrEmptyString=function(value){if(value===undefined)return true;if(value==null)return true;
if(typeof value==="string"&&value.length>0)return false;return true};var convertToDisplayLabel=function(labelName){if(labelName){var chars=labelName.split("");var result=chars[0];for(var i=1;i<chars.length;i++){var c=chars[i];if(isNaN(c)){var previousC=chars[i-1];if(c===c.toUpperCase()&&previousC!==" "&&previousC===previousC.toLowerCase())result+=" "}else result+=" ";result+=c}return result}return labelName};var removeElement=function(element){if(element)element.parentNode.removeChild(element)};var createElement=
function(tagName,body,classNames,attributes){var element=document.createElement(tagName);if(body)if(isArrayObject(body))body.forEach(function(el){element.appendChild(el)});else if(typeof body!=="string")element.appendChild(body);else element.innerHTML=body;if(classNames)if(isArrayObject(classNames))classNames.forEach(function(className){element.classList.add(className)});else element.className=classNames;if(attributes)for(var property in attributes)if(attributes.hasOwnProperty(property))element.setAttribute(property,
attributes[property]);return element};var getAppendToElement=function(appendToElementId){appendToElementId=appendToElementId===undefined?null:appendToElementId;if(appendToElementId==null)return document.getElementsByTagName("body")[0];if(document.getElementById(appendToElementId)==null)return document.getElementsByTagName("body")[0];return document.getElementById(appendToElementId)};var buildForm=function(attachToElement,inputElements){var length=inputElements.length,expRow=document.createElement("div"),
radioRow=null,radioColumn=null,radioName="";expRow.className=getStaticLabel(statics.row);var previousRow;for(var i=0;i<length;i++){var inputElement=inputElements[i];var inputType=inputElement.type,row=inputElement.appendToPreviousRow&&previousRow?previousRow:inputType=="expiry"||inputType=="cvc"?expRow:document.createElement("div"),column=document.createElement("div"),element=buildElement(inputElement),columnClass=getStaticLabel("col")+" "+getStaticLabel(statics.columnSm)+"-"+(inputElement["columnSm"]||
"12");if(inputType==="radio")if(radioColumn==null||radioRow==null){radioColumn=column;radioRow=row;radioName=inputElement.id}else if(radioName==inputElement.id){column=radioColumn;row=radioRow}else{radioColumn=column;radioRow=row;radioName=inputElement.id}if(inputType==="button")columnClass+=" "+getStaticLabel(statics.columnMd)+"-"+(inputElement["columnMd"]||"4");else if(inputType==="expiry"||inputType==="cvc"||inputType==="bsb")columnClass=getStaticLabel(statics.columnSm)+"-"+(inputElement["columnSm"]||
"6");else if(inputType==="static-text")columnClass=getStaticLabel("horrizontal");if(element!=null)if(inputType==="hidden")attachToElement.appendChild(element);else if(row!=null&&column!=null){row.className=getStaticLabel(statics.row);if(inputElement.id)row.classList.add(inputElement.id+"-row");column.className=columnClass;column.appendChild(element);row.appendChild(column);attachToElement.appendChild(row)}previousRow=row}return attachToElement};var buildElement=function(inputElement){if(inputElement.displayObject&&
inputElement.displayObject.Visible){var node=document.createElement("div"),label=document.createElement("label"),requiredLabel,inputType=getInputType(inputElement.type),input=document.createElement("input"),inputId=getStaticLabel(inputElement.id),labelName=inputElement.displayObject.LabelName,inputValue=inputElement.displayObject.Value,readOnly=inputElement.displayObject.ReadOnly,required=inputElement.required;if(required){requiredLabel=document.createElement("label");requiredLabel.innerHTML="*";
requiredLabel.classList.add("text-danger");input.setAttribute("required","required")}node.className=getStaticLabel(statics.node);if(inputType!=="static-text")input.setAttribute("type",inputType);if(inputType==="text"){var maxLength=parseInt(inputElement.maxlength,10);label.setAttribute("for",inputId);label.innerHTML=labelName;node.appendChild(label);if(requiredLabel)node.appendChild(requiredLabel);input.setAttribute("autocomplete","off");input.setAttribute("value",inputValue);if(readOnly)input.setAttribute("readonly",
"readonly");if(inputElement.type=="expiry"){input.setAttribute("placeholder","MM / YY");input.onkeyup=expiryOnKeyUp}if(maxLength>0)input.setAttribute("maxlength",maxLength)}else if(inputType==="hidden")input.setAttribute("value",inputValue);else if(inputType==="button")input.setAttribute("value",labelName);else if(inputType==="checkbox"||inputType==="radio"){if(inputType==="radio")input.setAttribute("value",inputElement.radioValue);if(inputValue==true)input.setAttribute("checked","checked");if(readOnly)setDisabled(input,
true);label.appendChild(input);var span=document.createElement("span");span.innerHTML=labelName;label.appendChild(span)}else if(inputType==="static-text"){label.className=getStaticLabel(statics.columnMd)+"-4 "+getStaticLabel(statics.columnSm)+"-4 "+"horrizontal-label";label.innerHTML=labelName;node.appendChild(label);if(requiredLabel)node.appendChild(requiredLabel);var innerDiv=document.createElement("div"),innerP=document.createElement("p");innerDiv.className=getStaticLabel(statics.columnMd)+"-6 "+
getStaticLabel(statics.columnSm)+"-6";innerP.className=getStaticLabel(inputType);innerP.innerHTML=inputValue;innerDiv.appendChild(innerP);node.appendChild(innerDiv);return node}if(inputType==="radio")input.name=inputId;else input.id=inputId;if(inputType==="hidden")return input;if(inputType==="checkbox"||inputType==="radio"){node.className+=" "+getStaticLabel(inputType);node.appendChild(label)}else{input.className=getStaticLabel(inputType);node.appendChild(input)}return node}return null};var buildModalDialog=
function(options){var dialog=document.createElement("div");var modalDialog=document.createElement("div");var modalContent=document.createElement("div");var modalHeader=document.createElement("div");var modalTitle=createElement("h4",options.title,"modal-title");var modalBody=createElement("div",options.body,"modal-body");var modalFooter=createElement("div",options.footer,"modal-footer");dialog.id=options.id;dialog.classList.add("modal");modalDialog.classList.add("modal-dialog");modalContent.classList.add("modal-content");
modalHeader.classList.add("modal-header");modalHeader.appendChild(modalTitle);modalContent.appendChild(modalHeader);modalContent.appendChild(modalBody);modalContent.appendChild(modalFooter);modalDialog.appendChild(modalContent);dialog.appendChild(modalDialog);var visible=false;return Object.defineProperties({},{element:{value:dialog},visible:{get:function(){return visible},set:function(value){if(visible!==value){if(value){this.backdrop=document.createElement("div");this.backdrop.classList.add("modal-backdrop");
dialog.parentNode.appendChild(this.backdrop);dialog.style.display="block"}else{if(this.backdrop){dialog.parentNode.removeChild(this.backdrop);this.backdrop=null}dialog.style.display="none"}visible=value}}}})};var findParentByClass=function(element,className){var parent=element.parentNode;while(parent){if(parent.classList.contains(className))return parent;parent=parent.parentNode}return null};var getInputType=function(type){switch(type){case "hidden":return"hidden";case "checkbox":return"checkbox";
case "button":return"button";case "radio":return"radio";case "static-text":return"static-text";default:return"text"}};function setDisabled(element,disabled){if(disabled){element.setAttribute("disabled","disabled");var restore=function(){element.removeAttribute("disabled")};return restore}else element.removeAttribute("disabled")}function setVisible(element,visible){var originalValue=element.style.display;element.style.display=visible?"block":"none";var restore=function(){element.style.display=originalValue};
return restore}function setValue(element,tempValue){var originalValue=element.getAttribute("value");element.setAttribute("value",tempValue);var restore=function(){element.setAttribute("value",originalValue)};return restore}var getElementValue=function(id){var element=document.getElementById(getStaticLabel(id));if(element==null)return undefined;if(element.type==="checkbox")return element.checked;return element.value};var getSelectedRadioValue=function(name){var radios=document.getElementsByName(name),
returnValue="",length=radios.length;for(var i=0;i<length;i++)if(radios[i].checked){returnValue=radios[i].value;break}return returnValue};var resetInputErrors=function(containerId){var child,parent=document.getElementById(getStaticLabel(containerId));var children=parent.getElementsByTagName("input");for(var i=0;i<children.length;i++){child=children[i];child.className=child.className.replace(new RegExp("\\b"+getStaticLabel("text-error")+"\\b"),"")}};var removeChildElements=function(containerId){var element=
document.getElementById(getStaticLabel(containerId));while(element.firstChild)element.removeChild(element.firstChild)};var insertApiCss=function(cssUrl){var cssNode=document.createElement("link"),head=document.getElementsByTagName("head")[0];cssNode.setAttribute("type","text/css");cssNode.setAttribute("rel","stylesheet");cssNode.setAttribute("href",cssUrl);head.appendChild(cssNode)};var expiryOnKeyUp=function(event){var char1,char2,val=this.value,regEx=new RegExp(/^\d{1,2}\s?\/\s?\d{2}$/);if(event.keyCode===
8||event.keyCode===46||event.keyCode===37||event.keyCode===39)return;val=val.replace(/[^0-9\/\s]/g,"");if(regEx.test(val)==false)if(val.length==2){char1=val.substring(0,1);char2=val.substring(1,2);if(char2=="/"||/\s/.test(char2))char1="0"+char1;else char1=val;val=char1+" / "}this.value=val};var getPostUrl=function(endPoint,authKey){var baseUrl=ms.BaseUrl.search(/\/$/)<0?ms.BaseUrl+="/":ms.BaseUrl;var postUrl=baseUrl+"v"+ms.Version+"/"+endPoint+"/"+authKey;return postUrl};var setupTokenForm=function(options,
btnText){var cssPath="CBA/api.css",cardNumber=new inputDisplayObject(true,"Card Number"),expiryDate=new inputDisplayObject(true,"Expiry Date"),cardHolderName=new inputDisplayObject(true,"Cardholder Name"),bsb=new inputDisplayObject(true,"BSB"),accountNumber=new inputDisplayObject(true,"Account Number"),accountName=new inputDisplayObject(true,"Account Name"),recordTypeCard=new inputDisplayObject(true,"Credit Card",true),recordTypeBank=new inputDisplayObject(true,"Bank Account",false),
submitBtn=new inputDisplayObject(true,btnText),defaults={AppendToElementId:null,AuthKey:null,Crn1:new inputDisplayObject(false,convertToDisplayLabel("Crn1")),Crn2:new inputDisplayObject(false,convertToDisplayLabel("Crn2")),Crn3:new inputDisplayObject(false,convertToDisplayLabel("Crn3")),EmailAddress:new inputDisplayObject(false,"Email"),Type:statics.tokenCCOptionValue,AcceptBankAccountTerms:false,DefaultErrorUrl:null};defaults=setOptions(true,defaults,options);
var baseUrl=ms.BaseUrl.search(/\/$/)<0?ms.BaseUrl+="/":ms.BaseUrl;var appendToElement=getAppendToElement(defaults.AppendToElementId),addContainer=document.createElement("div"),addForm=document.createElement("div"),addValidation=document.createElement("div"),cardSection=document.createElement("div"),bankSection=document.createElement("div"),buttonSection=document.createElement("div"),elementsToAppend=new Array,cardElements=new Array,bankElements=new Array,buttonElement=new Array,authKeyObj=new inputDisplayObject(true,
"",defaults.AuthKey),errorUrlObj=new inputDisplayObject(true,"",defaults.DefaultErrorUrl),recordTypeObj=new inputDisplayObject(true,"",defaults.Type),baTermsObj=new inputDisplayObject(true,"",defaults.AcceptBankAccountTerms),cssUrl=baseUrl+cssPath+"?v="+ms.Version;insertApiCss(cssUrl);addContainer.id=getStaticLabel(statics.container);addForm.id=getStaticLabel(statics.form);addValidation.id=getStaticLabel(statics.validation);addValidation.style.display="none";elementsToAppend.push(new formBuildingObject("hidden",
statics.authKey,authKeyObj));elementsToAppend.push(new formBuildingObject("hidden",statics.defaultErrorUrl,errorUrlObj));elementsToAppend.push(new formBuildingObject("hidden",statics.tokenRecordType,recordTypeObj));elementsToAppend.push(new formBuildingObject("hidden",statics.acceptBankTerms,baTermsObj));elementsToAppend.push(new formBuildingObject("text",statics.crn1,defaults.Crn1,50));elementsToAppend.push(new formBuildingObject("text",statics.crn2,defaults.Crn2,50));elementsToAppend.push(new formBuildingObject("text",
statics.crn3,defaults.Crn3,50));elementsToAppend.push(new formBuildingObject("text",statics.email,defaults.EmailAddress,250));if(defaults.Type==statics.tokenOPTIONOptionValue){elementsToAppend.push(new formBuildingObject("radio",statics.tokenRecordType,recordTypeCard,null,{radioValue:statics.tokenCCOptionValue}));elementsToAppend.push(new formBuildingObject("radio",statics.tokenRecordType,recordTypeBank,null,{radioValue:statics.tokenBAOptionValue}))}buildForm(addForm,elementsToAppend);if(defaults.Type==
statics.tokenOPTIONOptionValue||defaults.Type==statics.tokenCCOptionValue){cardSection.id=getStaticLabel(statics.creditCardSection);cardElements.push(new formBuildingObject("text",statics.cardNumber,cardNumber,19));cardElements.push(new formBuildingObject("expiry",statics.expiryDate,expiryDate,7));cardElements.push(new formBuildingObject("text",statics.cardHolderName,cardHolderName,50));buildForm(cardSection,cardElements);addForm.appendChild(cardSection)}if(defaults.Type==statics.tokenOPTIONOptionValue||
defaults.Type==statics.tokenBAOptionValue){bankSection.id=getStaticLabel(statics.bankAccountSection);if(defaults.Type==statics.tokenOPTIONOptionValue)bankSection.style.display="none";bankElements.push(new formBuildingObject("bsb",statics.bsb,bsb,6));bankElements.push(new formBuildingObject("text",statics.bankAccount,accountNumber,9));bankElements.push(new formBuildingObject("text",statics.bankName,accountName,32));buildForm(bankSection,bankElements);addForm.appendChild(bankSection)}buttonElement.push(new formBuildingObject("button",
statics.submitButton,submitBtn));buildForm(buttonSection,buttonElement);addForm.appendChild(buttonSection);addContainer.appendChild(addValidation);addContainer.appendChild(addForm);appendToElement.appendChild(addContainer);if(defaults.Type==statics.tokenOPTIONOptionValue){var radios=document.getElementsByName(getStaticLabel(statics.tokenRecordType)),radioLength=radios.length;for(var i=0;i<radioLength;i++)radios[i].onclick=toggleTokenSections}};var toggleTokenSections=function(){var radioLabel=getStaticLabel(statics.tokenRecordType),
cardSectionId=getStaticLabel(statics.creditCardSection),bankSectionId=getStaticLabel(statics.bankAccountSection),selectedValue=getSelectedRadioValue(radioLabel),cardSection=document.getElementById(cardSectionId),bankSection=document.getElementById(bankSectionId);if(selectedValue==statics.tokenBAOptionValue){cardSection.style.display="none";bankSection.style.display="block"}else{cardSection.style.display="block";bankSection.style.display="none"}};var submitPaymentRequest=function(){var validationSection=
document.getElementById(getStaticLabel(statics.validation));this.setAttribute("value","Processing...");this.setAttribute("disabled","disabled");removeChildElements(statics.validation);validationSection.style.display="none";resetInputErrors(statics.form);var expiry=getExpiryDateSplit(getElementValue(statics.expiryDate));var storeCard=getElementValue(statics.storeCard);storeCard=typeof storeCard==="boolean"?storeCard:false;ms.ProcessPayment({AuthKey:getElementValue(statics.authKey),Amount:getElementValue(statics.amount),
BillerCode:getElementValue(statics.billerCode),Crn1:getElementValue(statics.crn1),Crn2:getElementValue(statics.crn2),Crn3:getElementValue(statics.crn3),MerchantReference:getElementValue(statics.merchantReference),EmailAddress:getElementValue(statics.email),Currency:getElementValue(statics.currency),CardHolderName:getElementValue(statics.cardHolderName),CardNumber:getElementValue(statics.cardNumber),ExpiryMonth:expiry.month,ExpiryYear:expiry.year,Cvn:getElementValue(statics.cvc),
StoreCard:storeCard,CallbackFunction:paymentCallback,Type:getElementValue(statics.paymentProcessingType)})};var paymentCallback=function(){var result=arguments[0]||{},btnText="Processing...";handleApiCallback(result,btnText)};var beforeSubmitTokenRequest=function(){var validationSection=document.getElementById(getStaticLabel(statics.validation)),recordType=getElementValue(statics.tokenRecordType),acceptTerms=getElementValue(statics.acceptBankTerms),returnValue={recordType:recordType};removeChildElements(statics.validation);
validationSection.style.display="none";resetInputErrors(statics.form);returnValue.expiry=getExpiryDateSplit(getElementValue(statics.expiryDate));returnValue.acceptTerms=acceptTerms=="true"?true:false;if(recordType==statics.tokenOPTIONOptionValue){var radioLabel=getStaticLabel(statics.tokenRecordType);returnValue.recordType=getSelectedRadioValue(radioLabel)}return returnValue};var submitAddTokenRequest=function(){var formValues=beforeSubmitTokenRequest();this.setAttribute("value","Processing...");
this.setAttribute("disabled","disabled");ms.ProcessAddToken({AuthKey:getElementValue(statics.authKey),Crn1:getElementValue(statics.crn1),Crn2:getElementValue(statics.crn2),Crn3:getElementValue(statics.crn3),EmailAddress:getElementValue(statics.email),Type:formValues.recordType,CardHolderName:getElementValue(statics.cardHolderName),CardNumber:getElementValue(statics.cardNumber),ExpiryMonth:formValues.expiry.month,ExpiryYear:formValues.expiry.year,BSBNumber:getElementValue(statics.bsb),
BankAccountNumber:getElementValue(statics.bankAccount),BankAccountName:getElementValue(statics.bankName),AcceptBankAccountTerms:formValues.acceptTerms,CallbackFunction:addTokenCallback})};var submitUpdateTokenRequest=function(){var formValues=beforeSubmitTokenRequest();this.setAttribute("value","Processing...");this.setAttribute("disabled","disabled");ms.ProcessUpdateToken({AuthKey:getElementValue(statics.authKey),Crn1:getElementValue(statics.crn1),Crn2:getElementValue(statics.crn2),Crn3:getElementValue(statics.crn3),
EmailAddress:getElementValue(statics.email),Type:formValues.recordType,CardHolderName:getElementValue(statics.cardHolderName),CardNumber:getElementValue(statics.cardNumber),ExpiryMonth:formValues.expiry.month,ExpiryYear:formValues.expiry.year,BSBNumber:getElementValue(statics.bsb),BankAccountNumber:getElementValue(statics.bankAccount),BankAccountName:getElementValue(statics.bankName),AcceptBankAccountTerms:formValues.acceptTerms,CallbackFunction:updateTokenCallback})};var addTokenCallback=function(){var result=
arguments[0]||{},btnText="Add Token";handleApiCallback(result,btnText)};var updateTokenCallback=function(){var result=arguments[0]||{},btnText="Update Token";handleApiCallback(result,btnText)};function throwErrorIfNotFunction(callback,name){if(typeof callback!=="function")throw new Error(name+" is not a function",name);}var validateConvertAmounts=function(options){throwErrorIfNotFunction(options.CallbackFunction,"CallbackFunction");var errors=new Array;if(ms.IsNullOrEmptyString(options.AuthKey))errors.push(new errorObject("AuthKey is required",
"AuthKey"));return errors};var validatePayment=function(options){throwErrorIfNotFunction(options.CallbackFunction,"CallbackFunction");var errors=new Array;if(ms.IsNullOrEmptyString(options.AuthKey))errors.push(new errorObject("AuthKey is required","AuthKey"));if(options.Type!=statics.paymentTOKENOptionValue&&ms.ValidateCardNumber(options.CardNumber)==false)errors.push(new errorObject("Invalid card number","CardNumber"));if(ms.ValidateCVC(options.Cvn)==false)errors.push(new errorObject("Invalid Cvn",
"Cvn"));if(ms.ValidateExpiry(options.ExpiryMonth,options.ExpiryYear)==false)errors.push(new errorObject("Invalid expiry date","ExpiryYear"));return errors};var validateAddToken=function(options){throwErrorIfNotFunction(options.CallbackFunction,"CallbackFunction");var errors=new Array;if(ms.IsNullOrEmptyString(options.AuthKey))errors.push(new errorObject("AuthKey is required","AuthKey"));if(options.Type!=statics.tokenCCOptionValue&&options.Type!=statics.tokenBAOptionValue)errors.push(new errorObject("Invalid token type. Valid values are either CREDITCARD or BANKACCOUNT",
"Type"));if(options.Type==statics.tokenCCOptionValue){if(ms.ValidateCardNumber(options.CardNumber)==false)errors.push(new errorObject("Invalid card number","CardNumber"));if(ms.ValidateExpiry(options.ExpiryMonth,options.ExpiryYear)==false)errors.push(new errorObject("Invalid expiry date","ExpiryYear"))}else if(options.Type==statics.tokenBAOptionValue){if(ms.ValidateBSB(options.BSBNumber)==false)errors.push(new errorObject("Invalid bsb number","BsbNumber"));if(ms.ValidateAccountNumber(options.BankAccountNumber)==
false)errors.push(new errorObject("Invalid account number","BankAccountNumber"));if(ms.IsNullOrEmptyString(options.BankAccountName))errors.push(new errorObject("Account name is required","BankAccountName"));if(options.AcceptBankAccountTerms==false)errors.push(new errorObject("You must accept terms for adding bank account token","AcceptBankAccountTerms"))}return errors};var validateUpdateToken=function(options){throwErrorIfNotFunction(options.CallbackFunction,"CallbackFunction");var errors=new Array;
if(ms.IsNullOrEmptyString(options.AuthKey))errors.push(new errorObject("AuthKey is required","AuthKey"));if(options.Type!=statics.tokenCCOptionValue&&options.Type!=statics.tokenBAOptionValue)errors.push(new errorObject("Invalid token type. Valid values are either CREDITCARD or BANKACCOUNT","Type"));if(options.Type==statics.tokenCCOptionValue){if(ms.IsNullOrEmptyString(options.CardNumber)==false||ms.IsNullOrEmptyString(options.ExpiryMonth+options.ExpiryYear)==false){if(ms.ValidateCardNumber(options.CardNumber)==
false)errors.push(new errorObject("Invalid card number","CardNumber"));if(ms.ValidateExpiry(options.ExpiryMonth,options.ExpiryYear)==false)errors.push(new errorObject("Invalid expiry date","ExpiryYear"))}}else if(options.Type==statics.tokenBAOptionValue)if(ms.IsNullOrEmptyString(options.BSBNumber)==false||ms.IsNullOrEmptyString(options.BankAccountNumber)==false||ms.IsNullOrEmptyString(options.BankAccountName)==false){if(ms.ValidateBSB(options.BSBNumber)==false)errors.push(new errorObject("Invalid bsb number",
"BsbNumber"));if(ms.ValidateAccountNumber(options.BankAccountNumber)==false)errors.push(new errorObject("Invalid account number","BankAccountNumber"));if(ms.IsNullOrEmptyString(options.BankAccountName))errors.push(new errorObject("Account name is required","BankAccountName"));if(options.AcceptBankAccountTerms==false)errors.push(new errorObject("You must accept terms for adding bank account token","AcceptBankAccountTerms"))}return errors};var validateSetupSecureCall=function(options){throwErrorIfNotFunction(options.CallbackFunction,
"CallbackFunction");var errors=new Array;if(ms.IsNullOrEmptyString(options.AuthKey))errors.push(new errorObject("AuthKey can not be NULL or Empty","AuthKey"));return errors};var handleApiResponse=function(options){var apiResponseCode=999,errors=new Array,payloadData=null,defaults={responseType:1,responseObj:null,callbackFunction:null};defaults=setOptions(defaults,options);if(defaults.responseType==1)errors.push(new errorObject("Error submitting the request",""));else if(defaults.responseType==2)errors.push(new errorObject("Your request has timed out",
""));else{apiResponseCode=defaults.responseObj.ApiResponseCode;payloadData=defaults.responseObj.PayloadData;if(apiResponseCode>0)errors.push(new errorObject(defaults.responseObj.ResponseText,responseCodeToFieldMapping(apiResponseCode)))}var resultObj=new resultObject(defaults.responseType,errors,apiResponseCode,payloadData);if(typeof defaults.callbackFunction==="function")defaults.callbackFunction(resultObj)};var responseCodeToFieldMapping=function(responseCode){switch(responseCode){case 105:return"BillerCode";
case 106:return"Crn1";case 107:return"Crn2";case 108:return"Crn3";case 109:return"Currency";case 110:return"Amount";case 111:return"MerchantReference";case 112:return"CardNumber";case 113:return"CardHolderName";case 114:return"ExpiryYear";case 115:return"Cvn";case 124:return"BankAccountNumber";case 125:return"BsbNumber";case 126:return"BankAccountName";case 127:return"EmailAddress";case 130:return"AmountOriginal";case 131:return"AmountSurcharge";default:return""}};
var inputFieldToStaticsMapping=function(field){switch(field){case "BillerCode":return statics.billerCode;case "Crn1":return statics.crn1;case "Crn2":return statics.crn2;case "Crn3":return statics.crn3;case "Currency":return statics.currency;case "Amount":return statics.amount;case "MerchantReference":return statics.merchantReference;case "CardNumber":return statics.cardNumber;case "CardHolderName":return statics.cardHolderName;case "ExpiryYear":case "ExpiryDate":return statics.expiryDate;
case "Cvn":return statics.cvc;case "BankAccountNumber":return statics.bankAccount;case "BsbNumber":return statics.bsb;case "BankAccountName":return statics.bankName;case "EmailAddress":return statics.email;default:return""}};var getTokenPostData=function(options){var postData;if(options.Type=="BANKACCOUNT")postData={"DVTokenReq":{"Crn1":options.Crn1,"Crn2":options.Crn2,"Crn3":options.Crn3,"EmailAddress":options.EmailAddress,"CardDetails":null,
"AcceptBADirectDebitTC":options.AcceptBankAccountTerms,"BankAccountDetails":{"BSBNumber":options.BSBNumber,"AccountNumber":options.BankAccountNumber,"AccountName":options.BankAccountName}}};else postData={"DVTokenReq":{"Crn1":options.Crn1,"Crn2":options.Crn2,"Crn3":options.Crn3,"EmailAddress":options.EmailAddress,"CardDetails":{"CardHolderName":options.CardHolderName,"CardNumber":options.CardNumber,"ExpiryDateMonth":options.ExpiryMonth,
"ExpiryDateYear":options.ExpiryYear},"AcceptBADirectDebitTC":false,"BankAccountDetails":null}};return postData};var handleApiCallback=function(result,btnText){var submitButton=document.getElementById(getStaticLabel(statics.submitButton)),validationSection=document.getElementById(getStaticLabel(statics.validation)),defaultErrorUrl=getElementValue(statics.defaultErrorUrl),errorList;submitButton.setAttribute("value",btnText);submitButton.removeAttribute("disabled");if(result.AjaxResponseType==0)if(result.ApiResponseCode==
0)window.location.href=result.RedirectionUrl;else if(result.ApiResponseCode>=100&&result.ApiResponseCode<200){errorList=getDisplayErrorList(result.Errors,true);validationSection.appendChild(errorList);validationSection.style.display="block"}else if(ms.IsNullOrEmptyString(result.RedirectionUrl)==false)window.location.href=result.RedirectionUrl;else window.location.href=defaultErrorUrl;else{errorList=getDisplayErrorList(result.Errors,true);validationSection.appendChild(errorList);validationSection.style.display=
"block"}};var convertPostDataToKeyValuePairs=function(data){var pairString="";if(data.TxnReq!=null){pairString+=concatIfNotNull("CardNumber",data.TxnReq.CardDetails.CardNumber);pairString+=concatIfNotNull("&Cvn",data.TxnReq.CardDetails.Cvn);pairString+=concatIfNotNull("&ExpiryDateMonth",data.TxnReq.CardDetails.ExpiryDateMonth);pairString+=concatIfNotNull("&ExpiryDateYear",data.TxnReq.CardDetails.ExpiryDateYear);
pairString+=concatIfNotNull("&CardHolderName",data.TxnReq.CardDetails.CardHolderName);pairString+=concatIfNotNull("&Amount",data.TxnReq.Amount);pairString+=concatIfNotNull("&AmountOriginal",data.TxnReq.AmountOriginal);pairString+=concatIfNotNull("&AmountSurcharge",data.TxnReq.AmountSurcharge);pairString+=concatIfNotNull("&BillerCode",data.TxnReq.BillerCode);
pairString+=concatIfNotNull("&Crn1",data.TxnReq.Crn1);pairString+=concatIfNotNull("&Crn2",data.TxnReq.Crn2);pairString+=concatIfNotNull("&Crn3",data.TxnReq.Crn3);pairString+=concatIfNotNull("&Currency",data.TxnReq.Currency);pairString+=concatIfNotNull("&MerchantReference",data.TxnReq.MerchantReference);pairString+=concatIfNotNull("&EmailAddress",
data.TxnReq.EmailAddress);pairString+=concatIfNotNull("&StoreCard",data.TxnReq.StoreCard)}else if(data.DVTokenReq!=null){if(data.DVTokenReq.CardDetails!=null){pairString+=concatIfNotNull("CardNumber",data.DVTokenReq.CardDetails.CardNumber);pairString+=concatIfNotNull("&ExpiryDateMonth",data.DVTokenReq.CardDetails.ExpiryDateMonth);pairString+=concatIfNotNull("&ExpiryDateYear",
data.DVTokenReq.CardDetails.ExpiryDateYear);pairString+=concatIfNotNull("&CardHolderName",data.DVTokenReq.CardDetails.CardHolderName)}else if(data.DVTokenReq.BankAccountDetails!=null){pairString+=concatIfNotNull("BSBNumber",data.DVTokenReq.BankAccountDetails.BSBNumber);pairString+=concatIfNotNull("&AccountNumber",data.DVTokenReq.BankAccountDetails.AccountNumber);pairString+=concatIfNotNull("&AccountName",
data.DVTokenReq.BankAccountDetails.AccountName)}pairString+=concatIfNotNull("&Crn1",data.DVTokenReq.Crn1);pairString+=concatIfNotNull("&Crn2",data.DVTokenReq.Crn2);pairString+=concatIfNotNull("&Crn3",data.DVTokenReq.Crn3);pairString+=concatIfNotNull("&EmailAddress",data.DVTokenReq.EmailAddress);pairString+=concatIfNotNull("&AcceptBADirectDebitTC",data.DVTokenReq.AcceptBADirectDebitTC)}return pairString};
var convertKeyValuePairsToObject=function(pairString){var resultObj=new Object,pairs=pairString.split("&");for(var i=0;i<pairs.length;i++){var pair=pairs[i].split("="),key=pair[0],value=pair[1]||"";value=value.replace(/\+/g,"%20");resultObj[key]=decodeURIComponent(value)}return resultObj};var trimString=function(str){return(str+"").replace(/^\s+|\s+$/g,"")};var luhnCheck=function(num){if(/[^0-9-\s]+/.test(num))return false;var check=0,digit,even=false;num=num.replace(/\D/g,"");for(var n=num.length-
1;n>=0;n--){var charDigit=num.charAt(n);digit=parseInt(charDigit,10);if(even)if((digit*=2)>9)digit-=9;check+=digit;even=!even}return check%10==0};var setOptions=function(){var options,name,src,copy,copyIsArray,clone,target=arguments[0]||{},i=1,length=arguments.length,deep=false;if(typeof target==="boolean"){deep=target;target=arguments[1]||{};i=2}if(typeof target!=="object"&&typeof target!=="function")target={};for(;i<length;i++)if((options=arguments[i])!=null)for(name in options){src=target[name];
copy=options[name];if(target===copy)continue;if(deep&&copy&&(typeof copy==="object"||(copyIsArray=isArrayObject(copy)))){if(copyIsArray){copyIsArray=false;clone=src&&isArrayObject(src)?src:[]}else clone=src&&typeof src==="object"?src:{};target[name]=setOptions(deep,clone,copy)}else if(copy!==undefined)target[name]=copy}return target};var isArrayObject=function(obj){return Object.prototype.toString.call(obj)==="[object Array]"};var serialize=function(object,result,scope){var e,key,value;e=encodeURIComponent;
if(result==null)result=[];for(key in object){value=object[key];if(scope)key=""+scope+"["+key+"]";if(typeof value==="object")serialize(value,result,key);else result.push(""+key+"="+e(value))}return result.join("&").replace(/%20/g,"+")};var getStaticLabel=function(staticLabel){return prefix+"-"+staticLabel};var getExpiryDateSplit=function(date){var expMonth="",expYear="";if(date.length==4){expMonth=date.substring(0,2);expYear=date.substring(2,4)}else if(date.length==5){expMonth=date.substring(0,2);
expYear=date.substring(3,5)}else if(date.length==7){expMonth=date.substring(0,2);expYear=date.substring(5,7)}return{month:expMonth,year:expYear}};var getDisplayErrorList=function(errors,showFieldError){var length=errors.length,ul=document.createElement("ul"),displayFieldError=showFieldError===undefined?false:showFieldError;ul.className=getStaticLabel(statics.errorList);for(var i=0;i<length;i++){var li=document.createElement("li");li.innerHTML=errors[i].Message;ul.appendChild(li);if(displayFieldError==
true){var staticLabel=inputFieldToStaticsMapping(errors[i].PropertyName);if(ms.IsNullOrEmptyString(staticLabel)==false){var element=document.getElementById(getStaticLabel(staticLabel));if(element!=null)element.className+=" "+getStaticLabel("text-error")}}}return ul};var concatIfNotNull=function(key,value){if(ms.IsNullOrEmptyString(value)==false)return key+"="+value;if(typeof value==="boolean")return key+"="+value;return""};var createCorsRequestObject=function(method,url){var xhr=new XMLHttpRequest;
if("withCredentials"in xhr)xhr.open(method,url,true);else if(typeof XDomainRequest!="undefined"){xhr=new XDomainRequest;xhr.open(method,url+".nv")}else xhr=null;return xhr};var sendAjaxRequest=function(options){var postData=null,responseObj=new Object,isXDomainRequest="withCredentials"in new XMLHttpRequest==false&&typeof XDomainRequest!="undefined",defaults={url:null,method:"POST",contentType:"application/json",data:null,callbackFunction:null};defaults=setOptions(defaults,options);var xhr=createCorsRequestObject(defaults.method,
defaults.url);if(xhr==null){handleApiResponse({callbackFunction:defaults.callbackFunction});return}xhr.timeout=6E4;if(isXDomainRequest){if(defaults.data!=null)postData=convertPostDataToKeyValuePairs(defaults.data);xhr.onload=function(){var respType=1;if(ms.IsNullOrEmptyString(xhr.responseText)==false){respType=0;var ajaxResp=convertKeyValuePairsToObject(xhr.responseText);responseObj.ApiResponseCode=ajaxResp.ResponseCode;responseObj.ResponseText=ajaxResp.ResponseText;delete ajaxResp.ResponseCode;
delete ajaxResp.ResponseText;responseObj.PayloadData=ajaxResp}handleApiResponse({responseType:respType,responseObj:responseObj,callbackFunction:defaults.callbackFunction})};xhr.onprogress=function(){}}else{xhr.setRequestHeader("Content-type",defaults.contentType);if(defaults.data!=null)postData=JSON.stringify(defaults.data);xhr.onload=function(){var respType=1;if(xhr.status==200){respType=0;var ajaxResp=JSON.parse(xhr.response);responseObj.ApiResponseCode=ajaxResp.APIResponse.ResponseCode;responseObj.ResponseText=
ajaxResp.APIResponse.ResponseText;delete ajaxResp.APIResponse;responseObj.PayloadData=ajaxResp}handleApiResponse({responseType:respType,responseObj:responseObj,callbackFunction:defaults.callbackFunction})}}xhr.onerror=function(){handleApiResponse({callbackFunction:defaults.callbackFunction})};xhr.ontimeout=function(){handleApiResponse({responseType:2,callbackFunction:defaults.callbackFunction})};xhr.send(postData)};var errorObject=function(message,propertyName){this.Message=message;this.PropertyName=
propertyName};var inputDisplayObject=function(visible,labelName,value,readOnly){this.Visible=visible===undefined?false:visible;this.LabelName=labelName===undefined?"":labelName;this.Value=value||"";this.ReadOnly=readOnly===undefined?false:readOnly};var formBuildingObject=function(type,id,displayObject,maxlength,options){this.type=type;this.id=id;this.displayObject=displayObject;this.maxlength=maxlength===undefined?0:maxlength;this.radioValue=options&&options.radioValue!==undefined?options.radioValue:
"";this.appendToPreviousRow=options&&options.appendToPreviousRow;this.required=options&&options.required;this.columnSm=options&&options.columnSm!==undefined?options.columnSm:undefined;this.columnMd=options&&options.columnMd!==undefined?options.columnMd:undefined};var resultObject=function(ajaxResponseType,errors,apiResponseCode,payloadData){this.AjaxResponseType=ajaxResponseType||0;this.Errors=errors||null;this.ApiResponseCode=apiResponseCode;if(this.ApiResponseCode===undefined)this.ApiResponseCode=
null;if(payloadData!==undefined)this.PayloadData=payloadData};function addResultKeyAndRedirectionUrl(resultObj,resultKey,redirectionUrl){resultObj.ResultKey=resultKey||null;resultObj.RedirectionUrl=redirectionUrl||null;return resultObj}var prefix="api",statics={authKey:"authkey-copy",billerCode:"billercode",crn1:"crn1",crn2:"crn2",crn3:"crn3",merchantReference:"merchantreference",email:"emailaddress",currency:"currency",amount:"amount",amountOriginal:"amountoriginal",amountSurcharge:"amountsurcharge",
cardNumber:"cardnumber",truncatedCardNumber:"truncatedcardnumber",expiryDate:"expirydate",cvc:"cvc",cardHolderName:"cardholdername",bsb:"bsbnumber",bankAccount:"bankaccountnumber",bankName:"bankaccountname",acceptBankTerms:"acceptbankterms",storeCard:"storecard",submitButton:"submitbutton",startSecureModeButton:"startsecuremodebutton",resetFormButton:"resetformbutton",transferButton:"transferbutton",endSecureModeButton:"endsecuremodebutton",initiateSecureCallDialog:"initiatesecurecalldialog",initiateSecureCallDialogSecureModeMessage:"initiatesecurecalldialog-securemodemessage",
initiateSecureCallDialogCancelButton:"initiatesecurecalldialog-cancelbutton",initiateSecureCallDialogContinueButton:"initiatesecurecalldialog-continuebutton",disableClampingDialog:"disableclampingdialog",disableClampingDialogCancelButton:"disableclampingdialog-cancelbutton",disableClampingDialogContinueButton:"disableclampingdialog-continuebutton",secureCallEndedDialog:"securecallendeddialog",secureCallEndedDialogOkButton:"securecallendeddialog-okbutton",secureCallConfirmDetailsDialog:"securecallconfirmdetailsdialog",
secureCallConfirmDetailsDialogCancelButton:"securecallconfirmdetailsdialog-cancelbutton",secureCallConfirmDetailsDialogConfirmButton:"securecallconfirmdetailsdialog-confirmbutton",secureCallReceiptDialog:"securecallreceiptdialog",secureCallReceiptDialogCloseButton:"securecallreceiptdialog-closebutton",secureCallReceiptDialogUseSameCardButton:"securecallreceiptdialog-usesamecardbutton",resetCardNumberButton:"resetcardnumberbutton",resetExpiryDateButton:"resetexpirydatebutton",resetCVCButton:"resetcvcbutton",
form:"form",secureCallForm:"securecallform",validation:"validation",errorList:"error-list",node:"node",defaultErrorUrl:"defaulterrorurl",container:"container",row:"row",columnSm:"col-sm",columnMd:"col-md",tokenRecordType:"recordtype",paymentProcessingType:"paymentprocessingtype",creditCardSection:"creditcardsection",bankAccountSection:"bankaccountsection",tokenCCOptionValue:"CREDITCARD",tokenBAOptionValue:"BANKACCOUNT",tokenOPTIONOptionValue:"OPTION",paymentCCOptionValue:"CREDITCARD",
paymentTOKENOptionValue:"DVTOKENPAYMENT",testMode:"testmode",txnAction:"txnaction",txnType:"txntype",txnSubType:"txnsubtype",tokenisationMode:"tokenisationmode",merchantNumber:"merchantnumber"}})(this.CBA=this.CBA||{});